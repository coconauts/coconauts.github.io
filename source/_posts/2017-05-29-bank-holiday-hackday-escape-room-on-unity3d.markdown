---
layout: post
title: "Bank Holiday Hackday: Escape Room on Unity3D"
date: 2017-05-29 20:00:14 +0000
comments: true
categories: games
tags: unity3d hackday
sharing: true
keywords: PDG,DGA,PDC,Unity 3D,escape room,puzzles,unlock
description: "We made a escape room on Unity 3D using puzzle dependency charts"
author: Mar Bartolome
featured: true
published: true
---

It's another bank holiday in England, and in Coconauts this means: hackday!

Last time we did an [infinite recommender for Spotify](http://coconauts.net/blog/2017/05/01/infinify-an-infinite-discovery-mode-for-spotify/), 
and this time  we wanted to get started with a game concept that has been in our heads for a while: [a escape room](https://en.wikipedia.org/wiki/Escape_room).

![Room](/images/posts/2017-05-29-escape-room/room.png)

Our idea came after playing the [_Unlock!_ board game](https://boardgamegeek.com/boardgame/213460/unlock),
which quite successfully recreates the experience of a scape room using just cards.
The only downside of the game is that after you've solved each of the 3 rooms,
it looses the fun, as you already know the solution to the puzzles. So we though,
wouldn't it be cool to use this idea on a videogame, and have autogenerated puzzles
so that the fun never ends?

<!-- more-->

Lets not get overexcited though: we set as our first goal to design and implement a
static escape room puzzle, just to get familiar with the concept and the mechanics.
So that was the goal of today's hackday.

We started by brainstorming some ideas for items and fixtures in a possible
escape room. Then we started linking some of them together as dependencies, 
following the [puzzle dependency graph technique](http://grumpygamer.com/puzzle_dependency_charts), that the good people at Lucasarts use to design their adventure games. It's surprisingly easy to start
doodling puzzles with this method!

![Puzzle whiteboarding](/images/posts/2017-05-29-escape-room/puzzle_whiteboard.png)

Then we got into implementing. We went for Unity3D, using fixed camera scenes for 
the main room and each of the fixtures that we need to interact with. We 
ended up having to dumb down a bit our original puzzle grahp design, 
as otherwise we wouldn't have had time to implement it all in a day.

The end result is a short, but we hope that also clever escape room.
You can play right [here from your browser!](http://unity3d.coconauts.net/escaperoom/)


We are quite happy with the result. It's the first time we make a puzzler game
and it turns out it is very rewarding: usually physics is the most frustrating
part of game development, and you have none of that in here. Your mind can focus
on designing and thinking puzzles rather than on tricky implementations. And
the game is fun without having to spend a lot of time polishing the mechanics.

![TV](/images/posts/2017-05-29-escape-room/tv.png)

As stated, our MVP is linear (except for a couple of passwords which are
generated randomly), but we plan to pick this project again to try to turn
it into something generative next time. Stay tuned!
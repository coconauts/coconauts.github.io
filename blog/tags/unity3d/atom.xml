<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title><![CDATA[Tag: unity3d | Coconauts]]></title>
<link href="http://coconauts.net/blog/tags/unity3d/atom.xml" rel="self"/>
<link href="http://coconauts.net/"/>
<updated>2017-06-07T12:17:43+00:00</updated>
<id>http://coconauts.net/</id>
<author>
<name><![CDATA[Coconauts]]></name>
<email><![CDATA[admin@coconauts.net]]></email>
</author>
<generator uri="http://octopress.org/">Octopress</generator>

<entry>
<title type="html"><![CDATA[Bank Holiday Hackday: Escape Room on Unity3D]]></title>
<link href="http://coconauts.net/blog/2017/05/29/bank-holiday-hackday-escape-room-on-unity3d/"/>
<updated>2017-05-29T20:00:14+00:00</updated>
<id>http://coconauts.net/blog/2017/05/29/bank-holiday-hackday-escape-room-on-unity3d</id>
<content type="html"><![CDATA[<p>It&rsquo;s another bank holiday in England, and in Coconauts this means: hackday!</p>

<p>Last time we did an <a href="http://coconauts.net/blog/2017/05/01/infinify-an-infinite-discovery-mode-for-spotify/">infinite recommender for Spotify</a>,
and this time  we wanted to get started with a game concept that has been in our heads for a while: <a href="https://en.wikipedia.org/wiki/Escape_room">a escape room</a>.</p>

<p><img src="/images/posts/2017-05-29-escape-room/room.png" alt="Room" /></p>

<p>Our idea came after playing the <a href="https://boardgamegeek.com/boardgame/213460/unlock"><em>Unlock!</em> board game</a>,
which quite successfully recreates the experience of a scape room using just cards.
The only downside of the game is that after you&rsquo;ve solved each of the 3 rooms,
it looses the fun, as you already know the solution to the puzzles. So we though,
wouldn&rsquo;t it be cool to use this idea on a videogame, and have autogenerated puzzles
so that the fun never ends?</p>

<!-- more-->


<p>Lets not get overexcited though: we set as our first goal to design and implement a
static escape room puzzle, just to get familiar with the concept and the mechanics.
So that was the goal of today&rsquo;s hackday.</p>

<p>We started by brainstorming some ideas for items and fixtures in a possible
escape room. Then we started linking some of them together as dependencies,
following the <a href="http://grumpygamer.com/puzzle_dependency_charts">puzzle dependency graph technique</a>, that the good people at Lucasarts use to design their adventure games. It&rsquo;s surprisingly easy to start
doodling puzzles with this method!</p>

<p><img src="/images/posts/2017-05-29-escape-room/puzzle_whiteboard.png" alt="Puzzle whiteboarding" /></p>

<p>Then we got into implementing. We went for Unity3D, using fixed camera scenes for
the main room and each of the fixtures that we need to interact with. We
ended up having to dumb down a bit our original puzzle grahp design,
as otherwise we wouldn&rsquo;t have had time to implement it all in a day.</p>

<p>The end result is a short, but we hope that also clever escape room.
You can play right <a href="http://unity3d.coconauts.net/escaperoom/">here from your browser!</a></p>

<p><a href="http://unity3d.coconauts.net/escaperoom/"><img src="http://coconauts.net/images/posts/2017-05-29-escape-room/door.png"/></a></p>

<p>We are quite happy with the result. It&rsquo;s the first time we make a puzzler game
and it turns out it is very rewarding: usually physics is the most frustrating
part of game development, and you have none of that in here. Your mind can focus
on designing and thinking puzzles rather than on tricky implementations. And
the game is fun without having to spend a lot of time polishing the mechanics.</p>

<p>As stated, our MVP is linear (except for a couple of passwords which are
generated randomly), but we plan to pick this project again to try to turn
it into something generative next time. Stay tuned!</p>

<p><img src="/images/posts/2017-05-29-escape-room/tv.png" alt="TV" /></p>

<p>UPDATE: now <a href="https://play.google.com/store/apps/details?id=net.coconauts.escaperoomhack">also ported to Android!</a></p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[Water Ring Simulator]]></title>
<link href="http://coconauts.net/blog/2017/03/27/water-rings-simulator/"/>
<updated>2017-03-27T10:12:19+00:00</updated>
<id>http://coconauts.net/blog/2017/03/27/water-rings-simulator</id>
<content type="html"><![CDATA[<p>We have more projects that posts in the blog, that&rsquo;s why a long ago we created a new new version of our first-game-ever: Water Rings.</p>

<iframe width="560" height="560" src="https://www.youtube.com/embed/5VBlgFSvP_w" frameborder="0" allowfullscreen></iframe>




<!--more-->


<p>Water Rings Simulator is the new version of the classic toy game on Unity3d exlusive for Android.</p>

<p>This game features:</p>

<ul>
<li>Realisitc underwater physics</li>
<li>3D graphics</li>
<li>Mobile movement detection</li>
<li>Realistic visual effects</li>
<li>Transparent phone background (using camera to see behind it)</li>
<li>It&rsquo;s FREE!</li>
</ul>


<p><img src="/images/posts/2017-04-20-water-rings-simulator/transparent.png" alt="game screenshot" /></p>

<p>Download the game for free on the <a href="https://play.google.com/store/apps/details?id=net.coconauts.water3d">Android Play Store</a></p>

<p>Do you want us to keep expanding the game? let us know in the comments</p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[We built our house with Unity3D and Blender]]></title>
<link href="http://coconauts.net/blog/2016/05/19/build-house-in-3d-with-blender-unity3d/"/>
<updated>2016-05-19T22:51:00+00:00</updated>
<id>http://coconauts.net/blog/2016/05/19/build-house-in-3d-with-blender-unity3d</id>
<content type="html"><![CDATA[<p>We moved home a few months ago to a beautiful house in the country side in UK,
outside the expensive area of London, but close enough to commute daily.</p>

<p>As soon as we moved in, we built a simple version of our home in 3D on Blender
 to help us decorate. And then we integrated the 3D model into Unity3D and build
a game on top of it, on this case, a FPS or more like a FPW: First Person Walker,
a FPS without shooting, not as fun as it sounds.</p>

<p>We posted an image on Twitter a few months ago about our first prototype:</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">I finally created a First person game of my new home with <a href="https://twitter.com/hashtag/unity3D?src=hash">#unity3D</a> and <a href="https://twitter.com/hashtag/blender?src=hash">#blender</a> . Looks better than real life! <a href="https://t.co/JjSPPP1835">pic.twitter.com/JjSPPP1835</a></p>&mdash; Javi Rengel (@rephus) <a href="https://twitter.com/rephus/status/698998470280089600">February 14, 2016</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<!-- more -->


<p>And this is how our place looks after we bought all the furniture.</p>

<p><img src='https://farm8.staticflickr.com/7236/26513350403_4ac3cc142c_z_d.jpg'/>
<img src='https://farm8.staticflickr.com/7714/27083818276_36950ff772_z_d.jpg'/></p>

<p><img src='https://farm8.staticflickr.com/7715/27083819056_acb9ae8fa5_z_d.jpg'/>
<img src='https://farm8.staticflickr.com/7348/27083818686_12b5f68383_z_d.jpg'/></p>

<p><img src='https://farm8.staticflickr.com/7211/27083819206_727a82707c_z_d.jpg'/>
<img src='https://farm8.staticflickr.com/7434/26513349443_4d9df59b0d_z_d.jpg'/></p>

<p><img src='https://farm8.staticflickr.com/7750/27083819266_15ca7674e5_z_d.jpg'/>
<img src='https://farm8.staticflickr.com/7054/27083818506_f84f07ba12_z_d.jpg'/></p>

<p>The game is also a good chance to try out VR, perfect to use with Google VR to feel
like you are at home.</p>

<p><img src='https://farm8.staticflickr.com/7554/27083819136_dd3a9a50d3_z_d.jpg'/></p>

<p>If you are interested, you can play on our 3D model we made, please feel at home.</p>

<p><a href="http://unity3d.coconauts.net/welwyn">Play it here!</a></p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[RTS game template on Unity3d: StarCraft for mobile]]></title>
<link href="http://coconauts.net/blog/2016/01/30/starcraft-mobile-unity3d/"/>
<updated>2016-01-30T20:16:34+00:00</updated>
<id>http://coconauts.net/blog/2016/01/30/starcraft-mobile-unity3d</id>
<content type="html"><![CDATA[<p>We have been just <em>playing</em> with Unity3D for a few months, but we have already tried to build something: a new RTS (Real Time Strategy) game for Desktop and Mobile. But we want to make this game abstract and adaptable, so that it works like an engine, which means we could easily change the models, behaviour and statistics from the objects in the scene to make a completely new game, a clone of <a href="https://www.youtube.com/watch?v=0Wkrd594k4k">Star Wars Galactic Battlegrounds Clone Campaings</a> maybe ? or maybe completely new strategy game featuring plants vs zombies, pirates vs ninjas, angels vs demons or monkeys vs giraffes.</p>

<p><img src='https://farm2.staticflickr.com/1636/24079670424_3275b9c5f1_z_d.jpg'/></p>

<p>In our case, we&rsquo;ve started by using the 3D models, animations from StarCraft II game
and reverse engineered the behaviour of this game to make our strategy game template.</p>

<!-- more -->


<p><img src='https://farm2.staticflickr.com/1502/24614331371_6e4c44e84e_z_d.jpg'/></p>

<p>Please note that this is just a technical demo and it&rsquo;s not made to replace
StarCraft or make any money with their work in any way, we are just trying to follow their path because we love this game.</p>

<iframe width="100%" height="450" src="https://www.youtube.com/embed/MqGj5grWYG8" frameborder="0" allowfullscreen></iframe>


<h2>What we have achieved</h2>

<p>This is the list of features we have developed to simulate a basic gameplay from Starcraft.
They together implement the featureset from StarCraft games, but it can be easily applied to fit any other strategy gameplay. Do you want to have 4 different resource types instead of 2 like in SWGB ? just update the Resources class and you&rsquo;re done.</p>

<p><img src='https://farm2.staticflickr.com/1534/24707844895_74afa1c9af_z_d.jpg'/></p>

<ul>
<li>3D models and animations</li>
<li>Background music, sounds and reactions (<em>For Adun!</em>)</li>
<li>Buildings and units training queue</li>
<li>Special building behaviour (like gas extractor or supply depots)</li>
<li>Ground and flying units (Zerg and Terran)</li>
<li>Researches</li>
<li>Resources (Mineral, gas and supplies)</li>
<li>Import maps using image heightmap</li>
<li>Mouse and touch controls</li>
<li>Camera movement and zoom</li>
<li>Completely new simple interface for touch devices</li>
<li>New survival gameplay mode</li>
<li>Basic AI</li>
<li>Minimap</li>
<li>Pathfinding (using free A* pathfinding)</li>
</ul>


<p><img src='https://farm2.staticflickr.com/1452/24681642176_2a5f191b10_z_d.jpg'/></p>

<h2> What is missing</h2>

<p>This are things we haven&rsquo;t build for this prototype but we will probably do in the future.</p>

<ul>
<li>Multiplayer mode</li>
<li>Better AI</li>
<li>Local avoidance</li>
<li>Protoss</li>
<li>More units and buildings (like bunkers)</li>
<li>Wireframe support on OpenGL devices or equivalent</li>
<li>Unit visibility filter</li>
<li>Team coloring</li>
<li>Healing units, shields or Zerg restoration feature.</li>
</ul>


<p>We are planning to release this engine in the future (without the StarCraft assets),
but in the meantime let us know any thoughts in the comments.</p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[Building 3D virtual reality games with Unity3D]]></title>
<link href="http://coconauts.net/blog/2015/06/20/3d-virtual-reality-demo-with-unity/"/>
<updated>2015-06-20T15:53:19+00:00</updated>
<id>http://coconauts.net/blog/2015/06/20/3d-virtual-reality-demo-with-unity</id>
<content type="html"><![CDATA[<p>All the big companies like Samsung, Sony and even Facebook are doing their best to build the
ultimate Virtual Reality headset and make it standard.</p>

<p>Once they are in the market, we (indie game developers) need to be ready to build VR games
so everyone can enjoy their fancy expensive devices.</p>

<p>So, in order to start playing with them, you could either pay 350$ dollars for a <a href="https://www.oculus.com/order/">Oculus Rift developing kit</a>,
or you could get one of those cheap kits from <a href="http://www.aliexpress.com/item/High-quality-DIY-Google-Cardboard-Virtual-Reality-VR-Mobile-Phone-3D-Glasses-for-5-0-Screen/32301733749.html?s=p">Google</a>
or even <a href="https://twitter.com/rephus/status/587297530045714432">build your own</a>, and start building games in Unity3D.</p>

<p><img src="http://coconauts.net/images/posts/3d-island-demo/img1.png" /></p>

<!--more-->


<p>We recently built a VR technical demo in Unity and it&rsquo;s available on <a href="https://play.google.com/store/apps/details?id=net.coconauts.island3d">Play store</a>.
The purpose of this demo was built to test the performance of a Virtual Reality environment in Unity3D.</p>

<p><img src="http://coconauts.net/images/posts/3d-island-demo/img2.png" /></p>

<p>It uses the scene and models from the <a href="http://unity3d.com/showcase/live-demos#tropical-paradise">Tropical Paradise Unity demo</a>,</p>

<p>But because this demo was built for Unity v3 and we use 4.6 we had to fix some parts of the code to make it compatible,
also we replaced the water effect completely with a new one for the free version.</p>

<p>Also, it&rsquo;s optimized for mobile platforms and we included some simple features to make it VR ready.</p>

<p>We noticed that the game runs great in PC, and OK (~30FPS) in a modern phone even with high resolution and good quality.
The bottleneck is the number of details and shadows in the scene, or drawCalls in unity.</p>

<p>But you can try by your own by <a href="https://play.google.com/store/apps/details?id=net.coconauts.island3d">downloading</a> the game into your phone.</p>

<p>If you have a question or want more details about our demo, please let us know in the comments.</p>
]]></content>
</entry>

</feed>
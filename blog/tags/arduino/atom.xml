<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title><![CDATA[Tag: arduino | Coconauts]]></title>
<link href="http://coconauts.net/blog/tags/arduino/atom.xml" rel="self"/>
<link href="http://coconauts.net/"/>
<updated>2017-05-20T17:54:48+00:00</updated>
<id>http://coconauts.net/</id>
<author>
<name><![CDATA[Coconauts]]></name>
<email><![CDATA[admin@coconauts.net]]></email>
</author>
<generator uri="http://octopress.org/">Octopress</generator>

<entry>
<title type="html"><![CDATA[Smart staircase LED lighting with Arduino and IR sensors]]></title>
<link href="http://coconauts.net/blog/2017/02/21/stair-lights/"/>
<updated>2017-02-21T20:52:19+00:00</updated>
<id>http://coconauts.net/blog/2017/02/21/stair-lights</id>
<content type="html"><![CDATA[<p>For a long time, we&rsquo;ve been turning on the lights at the beginning the staircase,
just to turn them off when we reach another floor.</p>

<p>But instead, we built a simple system to turn them ON automatically when you are going upstairs or downstairs,
just by using a couple of IR proximity sensors, a relay and an Arduino Pro Mini, to control the timing.</p>

<p>Featured on <a href="https://www.instructables.com/id/Smart-Staircase-LED-Lighting/">Instructables</a> !!</p>

<!--more-->




<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Smart staircase LED lighting with <a href="https://twitter.com/hashtag/Arduino?src=hash">#Arduino</a> and IR sensors <a href="https://t.co/ns5zh2r8tQ">pic.twitter.com/ns5zh2r8tQ</a></p>&mdash; Javi Rengel (@rephus) <a href="https://twitter.com/rephus/status/830460205699854336">February 11, 2017</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>If you want to build your own, just follow our guide.</p>

<h2>Shopping list</h2>

<ul>
<li><a href="https://www.aliexpress.com/item/Smart-car-robot-E18-D80NK-infrared-obstacle-avoidance-sensor-proximity-switch-3-80cm-adjustable-Free-Shipping/32396659854.html">IR proximity sensor</a></li>
<li><a href="https://www.aliexpress.com/item/Free-Shipping-new-version-2pcs-lot-Pro-Mini-328-Mini-ATMEGA328-5V-16MHz-for-Arduino/1731218090.html">Arduino Pro Mini</a></li>
<li><a href="https://www.aliexpress.com/item/1pc-1-Channel-5V-Optocoupler-Driver-Relay-Module-High-Level-for-Arduino-top-quality/32638202870.html">Relay</a></li>
<li><a href="https://www.aliexpress.com/item/Free-Shipping-SMD5050-12V-flexible-light-60-leds-m-LED-strips-5m-lot-White-Blue-Green/1599651146.html">5m LED strip</a></li>
</ul>


<p>You can optionally use a power converter (from 12v to 5v) if you want to take advantage of the 12v input to power your Arduino and sensors.</p>

<ul>
<li><a href="https://www.aliexpress.com/item/1Pc-DC-to-DC-12V-to-5V-3A-15W-Auto-Car-Power-Converter-Regulator-Adapter-for/32702720703.html">12v to 5v converter</a></li>
</ul>


<h2>Schema</h2>

<p><img src="/images/posts/2017-02-18-stair-lights/schema.png" alt="schema" /></p>

<h2>Arduino code</h2>

<p>```</p>

<h1>define IR_RECEIVER 8</h1>

<h1>define RELAY 10</h1>

<p>void setup() {
  // initialize digital pin LED_BUILTIN as an output.</p>

<pre><code>pinMode(RELAY, OUTPUT);
</code></pre>

<p>  digitalWrite(RELAY, LOW);</p>

<p>}</p>

<p>// the loop function runs over and over again forever
void loop() {</p>

<p>  int sensorValue = digitalRead(IR_RECEIVER);
  // print out the value you read:
  delay(10);        // delay in between reads for stability</p>

<p>  if (sensorValue == 0 ) {</p>

<pre><code>digitalWrite(RELAY, HIGH);   // turn the LED on (HIGH is the voltage level)
delay(5000);
</code></pre>

<p>  }
  else {</p>

<pre><code>digitalWrite(RELAY, LOW);
</code></pre>

<p>  }
}
```</p>

<h2>Images</h2>

<p><img src="/images/posts/2017-02-18-stair-lights/arduino.jpg" alt="arduino" />
<img src="/images/posts/2017-02-18-stair-lights/upstairs.jpg" alt="upstairs" />
<img src="/images/posts/2017-02-18-stair-lights/downstairs.jpg" alt="downstairs" /></p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[Lightning-dodge-O-matic]]></title>
<link href="http://coconauts.net/blog/2016/06/13/lightning-dodge-o-matic/"/>
<updated>2016-06-13T20:51:00+00:00</updated>
<id>http://coconauts.net/blog/2016/06/13/lightning-dodge-o-matic</id>
<content type="html"><![CDATA[<p>If you have played Final Fantasy X, either its original version for PS2 or its remastered version
for PS4 and PSVita, you might remember Thunder Plains and its lightning dodge challenge
to get the Mars sigil.</p>

<p>It&rsquo;s quite challenging and it might take a while. I once got it (and I have a PS2 memory card to prove it),
but I was not in the mood to do it again on the remastered version.</p>

<p>That&rsquo;s why I decided to build a simple machine to do the job for me.
Because constantly processing inputs to produce outputs is what machines do best.</p>

<blockquote class="twitter-video" data-lang="en"><p lang="en" dir="ltr">Lightning dancing like a machine. Presenting lightning-dodge-O-matic <a href="https://twitter.com/hashtag/FFX?src=hash">#FFX</a> <a href="https://twitter.com/hashtag/Lulu?src=hash">#Lulu</a> <a href="https://twitter.com/hashtag/Arduino?src=hash">#Arduino</a> <a href="https://t.co/WMLX1CRwSN">pic.twitter.com/WMLX1CRwSN</a></p>&mdash; Javi Rengel (@rephus) <a href="https://twitter.com/rephus/status/742057060456648709">June 12, 2016</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<!--more-->


<p>Just by using a LDR, a servo and an Arduino you can dodge lightnings like a Pro too.</p>

<p>You can download the script and the schema in <a href="https://github.com/rephus/lightning-dodge-O-matic/blob/master/README.md">Github</a></p>

<p><img src="https://farm8.staticflickr.com/7335/27042150163_732cb2c99b_z_d.jpg" alt="Schema" /></p>

<p>By building this, you can avoid not only 200 lightnings but as many you like, I did 1066 in a few hours.</p>

<p><img src="https://farm8.staticflickr.com/7423/27042150153_b6daeed7d5_z_d.jpg" alt="record" /></p>

<p>Happy gaming.</p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[Hackaday price 2015 retrospective]]></title>
<link href="http://coconauts.net/blog/2015/10/06/hackaday-price-2015-retrospective/"/>
<updated>2015-10-06T21:40:34+00:00</updated>
<id>http://coconauts.net/blog/2015/10/06/hackaday-price-2015-retrospective</id>
<content type="html"><![CDATA[<p><img src='https://farm1.staticflickr.com/584/21381222983_a64f947c8d_o_d.png' align='right'/></p>

<p>You may have noticed that the blog has been quite quiet during the last month.
The reason being we were focusing our efforts on doing some epic Watchduino
development, as <a href="https://hackaday.io/project/7244-watchduino2">contestants for the Hackaday Prize 2015</a>.
Sad news in the end though, as we didn&rsquo;t make it to the finals.</p>

<p>But that&rsquo;s ok though. Regardless of the result, this has been a good excercise
for us, and the contest has pushed us to keep working hard on the
<a href="/projects/watchduino2">Watchduino</a> project. That&rsquo;s why we want to
sum up all we have learned and all we have improved on the project during
the course of the contest.</p>

<!-- more -->


<h3>3D Case</h3>

<p><img class='screenshot' src='https://farm1.staticflickr.com/760/21814249490_2bfe5bf2b9_z_d.jpg'/>
<img class='screenshot' src='https://farm6.staticflickr.com/5717/21815509489_5531e2b080_z_d.jpg'/></p>

<p>One of the things in our TODO list was to build a proper 3D case for our watch,
and thanks to our <a href="https://twitter.com/rephus/status/571811583602647040">3D printer</a> we managed to build a wearable prototype.</p>

<p>We also introduced the Smart Strap design which allows us to keep some of the
electronic components spread along the strap, keeping the watch face smaller.</p>

<p>Our first case design, from a few months ago, was done in <a href="https://www.blender.org/">Blender</a>,
however we&rsquo;ve now switched to <a href="https://tinkercad.com/things/gG641gG1b4c">Tinkercad</a> as it&rsquo;s a great web platform for doing
awesome 3D models really quickly.</p>

<p>We also designed an additional strap prototype using a flexible strap, that we
plan to 3D print soon enough.</p>

<h3>Migration to Cordova</h3>

<p><img class='screenshot' src='https://farm1.staticflickr.com/694/21815557799_9d65cd5172_z_d.jpg'/>
<img class='screenshot' src='https://farm1.staticflickr.com/668/21814312750_9f80cebaa1_b_d.jpg'/></p>

<p>A few weeks before we joined the contest, we started migrating the existing
Android companion app, written natively, to the Cordova framework.</p>

<p>The reason for this is because Cordova seems a better platform for us, based
on HTML5 + JS, and multiplatform. It&rsquo;s easier and faster to develop with,
the codebase is smaller, and in general we are quite happy with it!</p>

<p>We finally migrated all the code with a better design by the end of August,
and we even introduced new functionality.</p>

<h3>Showcase videos</h3>

<p>We made two videos to showcase the capabilities of the watch.</p>

<iframe width="100%" height="500" src="https://www.youtube.com/embed/n-ubg1R2e-A" frameborder="0" allowfullscreen></iframe>




<iframe width="100%" height="500" src="https://www.youtube.com/embed/LVE85OxWGzs" frameborder="0" allowfullscreen></iframe>


<h3>Open source code and documentation</h3>

<p>One of the requirements of the project was to release our code and build our
documentation so everyone can create a new Watchduino from scratch.</p>

<p>This has been in our roadmap for ages, so it was a good excuse to clean up
the code a bit an make it public.</p>

<p>Feel free to <a href="https://github.com/coconauts/watchduino2">clone our project</a>, and to make pull request to improve our own.</p>

<p>Be warned though: the codebase is still under heavy development, so things
might change drastically from one day to the next!</p>

<h3>Next steps</h3>

<p>The community also helped us to improve our watch architecture and we are keen on
trying different approaches so Watchduino can be even better than it&rsquo;s now.</p>

<p>One of the main objectives is to improve the Bluetooth connectivity and
the power consumption. Another one is to make an app creation framework that is
lean and easy to use.</p>

<p>Stay tuned for more updates, are we are definitely not done with our
Watchduino development!</p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[WatchDuino 2 is semifinalist on the 2015 Hackaday Prize]]></title>
<link href="http://coconauts.net/blog/2015/08/24/watchduino-2-is-semifinalist-on-the-2015-hackaday-prize/"/>
<updated>2015-08-24T19:18:35+00:00</updated>
<id>http://coconauts.net/blog/2015/08/24/watchduino-2-is-semifinalist-on-the-2015-hackaday-prize</id>
<content type="html"><![CDATA[<p><img src="http://coconauts.net/images/posts/hackaday_semifinal.png" /></p>

<p>We are really excited to announce that <a href="https://www.coconauts.net/projects/watchduino2/">WatchDuino 2</a> has passed to
<a href="http://hackaday.com/2015/08/24/100-semifinalists-for-the-2015-hackaday-prize/">the semi-finals of the 2015 edition of the Hackaday Prize</a>!
It was selected amongst the best 100 of a total of more than 900 projects.
To see this kind of recognition out of a community that we admire is
absolutely thrilling, thank you so much =)</p>

<p>This means that now we will have to give our best we want to be good enough
to be in the finals. Many other excellent projects are competing!</p>

<p>Keep an eye on the <a href="https://hackaday.io/project/7244-watchduino2">project page on Hackaday</a>,
as it is likely to be holding exciting updates and advancements during the
following month. And give us your skulls and likes if you have an account! =)</p>
]]></content>
</entry>

<entry>
<title type="html"><![CDATA[Why you shouldn't use Arduino UNO]]></title>
<link href="http://coconauts.net/blog/2015/05/18/why-you-should-not-use-arduino-uno/"/>
<updated>2015-05-18T21:53:19+00:00</updated>
<id>http://coconauts.net/blog/2015/05/18/why-you-should-not-use-arduino-uno</id>
<content type="html"><![CDATA[<p>Arduino is an awesome platform, that allows you to create almost
everything you can imagine with a really tiny investment and some
basic hardware knowledge.</p>

<p>Everyone starts using Arduino UNO for development, and we see
<em>a lot</em> of projects using this board, but there are a few good
reasons why you shouldn&rsquo;t use UNO&hellip;</p>

<p><img src="http://coconauts.net/images/posts/why-not-uno/arduino_hand.jpg" /></p>

<!--more-->


<h2>Arduino UNO is expensive</h2>

<p>Arduino UNO is one of the most expensive boards that features the
ATMega328 compared with other Arduino models like Mini, Micro,
or Lilypad. There are
<a href="http://www.arduino.cc/en/Main/Products">tons of them to choose from</a>)!</p>

<table>
<thead>
<tr>
<th></th>
<th> Model       </th>
<th> Price (on store.arduino.cc) </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> UNO         </td>
<td> 20€</td>
</tr>
<tr>
<td></td>
<td> Micro       </td>
<td> 18€</td>
</tr>
<tr>
<td></td>
<td> Mini        </td>
<td> 14€</td>
</tr>
<tr>
<td></td>
<td> Lillypad    </td>
<td> 16€</td>
</tr>
</tbody>
</table>


<p>Note that these prices come from the
<a href="http://store.arduino.cc">oficial Arduino store</a>. However you can
easily find compatible clonic boards on Amazon, Ebay or Aliexpress,
at a fraction of the price.</p>

<p>You could also use a bare ATMega328 like we did in our
<a href="https://www.coconauts.net/projects/watchduino/">first Watchduino</a>
or in our
<a href="https://www.coconauts.net/blog/2014/10/18/arduino-radio-improvements-low-consumption/">light sensor with RF24 radio module</a>.</p>

<h2>Arduino UNO is big</h2>

<p>Arduino UNO is a big board, and you probably going to use a bread board
next to it, which makes your whole development prototype really complex.</p>

<p>Instead of that, use a Nano or Micro attached to a bread board directly.</p>

<p><img src="http://coconauts.net/images/posts/why-not-uno/uno_vs_nano.jpeg" /></p>

<h2>Arduino UNO is not power-efficient</h2>

<p>Most of the projects built with Arduino will be wireless and
battery-powered, so the device should be power-efficient,
but Arduino UNO is not.</p>

<p>Because Arduino UNO has a lot of hardware you don&rsquo;t need, it consumes
<em>a lot</em> more than its brothers:</p>

<ul>
<li>USB controller</li>
<li>Too many leds</li>
</ul>


<p>However, boards like Lilypad or Mini don&rsquo;t have a USB controller,
which reduces its normal consumption a few mAh, eg:</p>

<ul>
<li>Standalone consumption for UNO: 28mAh</li>
<li>Standalone consumption for Mini: 13mAh</li>
</ul>


<p>This measures have been taken when running a dummy sketch
that does nothing (not even blinking a LED). If you make
heavier computations or put the Arduino to sleep, measurements
will vary.</p>

<h2>Arduino UNO uses USB-B connector</h2>

<p>Seriously?? in this day and age?</p>

<h2>Arduino UNO is not designed for production</h2>

<p>Because it&rsquo;s big, and has a very high consumption, you shouldn&rsquo;t
ever use it in a prototype, like a remote controlled device, or a
batery-powered-sensor, or a
 <a href="https://www.coconauts.net/projects/watchduino2/">smartwatch</a>.</p>

<p>Also, you probably don&rsquo;t want to develop in a hardware that won&rsquo;t
match the final product specs, do you ?</p>

<h2>Conclussions</h2>

<p>The only reason why you could want to use UNO is to use a shield,
but in most of the cases they&rsquo;re not worth it.</p>

<p>Our personal preference is Arduino Mini: it&rsquo;s small, cheap and has
the lowest consumption in its family.</p>

<p>So do yourself a favor and use any of the other boards available
instead of using UNO again.</p>

<p><img src="http://coconauts.net/images/posts/why-not-uno/arduino_family.jpg" /></p>
]]></content>
</entry>

</feed>